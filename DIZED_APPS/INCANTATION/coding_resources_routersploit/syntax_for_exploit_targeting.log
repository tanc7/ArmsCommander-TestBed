routersploit/modules/scanners/autopwn.py:33:    target = exploits.Option('', 'Target IP address e.g. 192.168.1.1')  # target address
routersploit/modules/scanners/autopwn.py:34:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/scanners/autopwn.py:35:    threads = exploits.Option(8, "Number of threads")
routersploit/modules/payloads/generic/netcat_reverse_tcp.py:16:    netcat_binary = exploits.Option('/bin/nc', 'Netcat binary')
routersploit/modules/payloads/generic/netcat_reverse_tcp.py:17:    shell_binary = exploits.Option('/bin/sh', 'Shell')
routersploit/modules/payloads/generic/awk_bind_tcp.py:17:    awk_binary = exploits.Option('awk', 'Awk binary')
routersploit/modules/payloads/generic/netcat_bind_tcp.py:17:    netcat_binary = exploits.Option('/bin/nc', 'Netcat binary')
routersploit/modules/payloads/generic/netcat_bind_tcp.py:18:    shell_binary = exploits.Option('/bin/sh', 'Shell')
routersploit/modules/payloads/generic/awk_reverse_tcp.py:16:    awk_binary = exploits.Option('awk', 'Awk binary')
routersploit/modules/creds/http_basic_default.py:39:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/http_basic_default.py:40:    port = exploits.Option(80, 'Target port')
routersploit/modules/creds/http_basic_default.py:41:    threads = exploits.Option(8, 'Number of threads')
routersploit/modules/creds/http_basic_default.py:42:    defaults = exploits.Option(wordlists.defaults, 'User:Pass or file with default credentials (file://)')
routersploit/modules/creds/http_basic_default.py:43:    path = exploits.Option('/', 'URL Path')
routersploit/modules/creds/http_basic_default.py:44:    verbosity = exploits.Option(True, 'Display authentication attempts', validators=validators.boolify)
routersploit/modules/creds/http_basic_default.py:45:    stop_on_success = exploits.Option(True, 'Stop on first valid authentication attempt', validators=validators.boolify)
routersploit/modules/creds/ssh_default.py:38:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/ssh_default.py:39:    port = exploits.Option(22, 'Target port')
routersploit/modules/creds/ssh_default.py:40:    threads = exploits.Option(8, 'Numbers of threads')
routersploit/modules/creds/ssh_default.py:41:    defaults = exploits.Option(wordlists.defaults, 'User:Pass or file with default credentials (file://)')
routersploit/modules/creds/ssh_default.py:42:    verbosity = exploits.Option('yes', 'Display authentication attempts')
routersploit/modules/creds/ssh_default.py:43:    stop_on_success = exploits.Option('yes', 'Stop on first valid authentication attempt')
routersploit/modules/creds/ftp_bruteforce.py:39:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/ftp_bruteforce.py:40:    port = exploits.Option(21, 'Target port')
routersploit/modules/creds/ftp_bruteforce.py:42:    threads = exploits.Option(8, 'Number of threads')
routersploit/modules/creds/ftp_bruteforce.py:43:    usernames = exploits.Option('admin', 'Username or file with usernames (file://)')
routersploit/modules/creds/ftp_bruteforce.py:44:    passwords = exploits.Option(wordlists.passwords, 'Password or file with passwords (file://)')
routersploit/modules/creds/ftp_bruteforce.py:45:    verbosity = exploits.Option('yes', 'Display authentication attempts')
routersploit/modules/creds/ftp_bruteforce.py:46:    stop_on_success = exploits.Option('yes', 'Stop on first valid authentication attempt')
routersploit/modules/creds/http_digest_bruteforce.py:42:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/http_digest_bruteforce.py:43:    port = exploits.Option(80, 'Target port')
routersploit/modules/creds/http_digest_bruteforce.py:45:    threads = exploits.Option(8, 'Numbers of threads')
routersploit/modules/creds/http_digest_bruteforce.py:46:    usernames = exploits.Option('admin', 'Username or file with usernames (file://)')
routersploit/modules/creds/http_digest_bruteforce.py:47:    passwords = exploits.Option(wordlists.passwords, 'Password or file with passwords (file://)')
routersploit/modules/creds/http_digest_bruteforce.py:48:    path = exploits.Option('/', 'URL Path')
routersploit/modules/creds/http_digest_bruteforce.py:49:    verbosity = exploits.Option(True, 'Display authentication attempts', validators=validators.boolify)
routersploit/modules/creds/http_digest_bruteforce.py:50:    stop_on_success = exploits.Option(True, 'Stop on first valid authentication attempt', validators=validators.boolify)
routersploit/modules/creds/http_form_bruteforce.py:40:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/http_form_bruteforce.py:41:    port = exploits.Option(80, 'Target port')
routersploit/modules/creds/http_form_bruteforce.py:42:    threads = exploits.Option(8, 'Number of threads')
routersploit/modules/creds/http_form_bruteforce.py:43:    usernames = exploits.Option('admin', 'Username or file with usernames (file://)')
routersploit/modules/creds/http_form_bruteforce.py:44:    passwords = exploits.Option(wordlists.passwords, 'Password or file with passwords (file://)')
routersploit/modules/creds/http_form_bruteforce.py:45:    form = exploits.Option('auto', 'Post Data: auto or in form login={{USER}}&password={{PASS}}&submit')
routersploit/modules/creds/http_form_bruteforce.py:46:    path = exploits.Option('/login.php', 'URL Path')
routersploit/modules/creds/http_form_bruteforce.py:47:    form_path = exploits.Option('same', 'same as path or URL Form Path')
routersploit/modules/creds/http_form_bruteforce.py:48:    verbosity = exploits.Option('yes', 'Display authentication attempts')
routersploit/modules/creds/http_form_bruteforce.py:49:    stop_on_success = exploits.Option('yes', 'Stop on first valid authentication attempt')
routersploit/modules/creds/http_form_default.py:39:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/http_form_default.py:40:    port = exploits.Option(80, 'Target port')
routersploit/modules/creds/http_form_default.py:41:    threads = exploits.Option(8, 'Number of threads')
routersploit/modules/creds/http_form_default.py:42:    defaults = exploits.Option(wordlists.defaults, 'User:Pass or file with default credentials (file://)')
routersploit/modules/creds/http_form_default.py:43:    form = exploits.Option('auto', 'Post Data: auto or in form login={{USER}}&password={{PASS}}&submit')
routersploit/modules/creds/http_form_default.py:44:    path = exploits.Option('/login.php', 'URL Path')
routersploit/modules/creds/http_form_default.py:45:    form_path = exploits.Option('same', 'same as path or URL Form Path')
routersploit/modules/creds/http_form_default.py:46:    verbosity = exploits.Option('yes', 'Display authentication attempts')
routersploit/modules/creds/http_form_default.py:47:    stop_on_success = exploits.Option('yes', 'Stop on first valid authentication attempt')
routersploit/modules/creds/snmp_bruteforce.py:37:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/snmp_bruteforce.py:38:    port = exploits.Option(161, 'Target port')
routersploit/modules/creds/snmp_bruteforce.py:39:    version = exploits.Option(1, 'Snmp version 0:v1, 1:v2c')
routersploit/modules/creds/snmp_bruteforce.py:40:    threads = exploits.Option(8, 'Number of threads')
routersploit/modules/creds/snmp_bruteforce.py:41:    snmp = exploits.Option(wordlists.snmp, 'Community string or file with community strings (file://)')
routersploit/modules/creds/snmp_bruteforce.py:42:    verbosity = exploits.Option('yes', 'Display authentication attempts')
routersploit/modules/creds/snmp_bruteforce.py:43:    stop_on_success = exploits.Option('yes', 'Stop on first valid community string')
routersploit/modules/creds/ssh_bruteforce.py:39:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/ssh_bruteforce.py:40:    port = exploits.Option(22, 'Target port')
routersploit/modules/creds/ssh_bruteforce.py:42:    threads = exploits.Option(8, 'Number of threads')
routersploit/modules/creds/ssh_bruteforce.py:43:    usernames = exploits.Option('admin', 'Username or file with usernames (file://)')
routersploit/modules/creds/ssh_bruteforce.py:44:    passwords = exploits.Option(wordlists.passwords, 'Password or file with passwords (file://)')
routersploit/modules/creds/ssh_bruteforce.py:45:    verbosity = exploits.Option('yes', 'Display authentication attempts')
routersploit/modules/creds/ssh_bruteforce.py:46:    stop_on_success = exploits.Option('yes', 'Stop on first valid authentication attempt')
routersploit/modules/creds/http_digest_default.py:41:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/http_digest_default.py:42:    port = exploits.Option(80, 'Target port')
routersploit/modules/creds/http_digest_default.py:43:    threads = exploits.Option(8, 'Number of threads')
routersploit/modules/creds/http_digest_default.py:44:    defaults = exploits.Option(wordlists.defaults, 'User:Pass or file with default credentials (file://)')
routersploit/modules/creds/http_digest_default.py:45:    path = exploits.Option('/', 'URL Path')
routersploit/modules/creds/http_digest_default.py:46:    verbosity = exploits.Option(True, 'Display authentication attempts', validators=validators.boolify)
routersploit/modules/creds/http_digest_default.py:47:    stop_on_success = exploits.Option(True, 'Stop on first valid authentication attempt', validators=validators.boolify)
routersploit/modules/creds/telnet_bruteforce.py:38:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/telnet_bruteforce.py:39:    port = exploits.Option(23, 'Target port')
routersploit/modules/creds/telnet_bruteforce.py:41:    threads = exploits.Option(8, 'Number of threads')
routersploit/modules/creds/telnet_bruteforce.py:42:    usernames = exploits.Option('admin', 'Username or file with usernames (file://)')
routersploit/modules/creds/telnet_bruteforce.py:43:    passwords = exploits.Option(wordlists.passwords, 'Password or file with passwords (file://)')
routersploit/modules/creds/telnet_bruteforce.py:44:    verbosity = exploits.Option('yes', 'Display authentication attempts')
routersploit/modules/creds/telnet_bruteforce.py:45:    stop_on_success = exploits.Option('yes', 'Stop on first valid authentication attempt')
routersploit/modules/creds/telnet_default.py:37:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/telnet_default.py:38:    port = exploits.Option(23, 'Target port')
routersploit/modules/creds/telnet_default.py:40:    threads = exploits.Option(8, 'Numbers of threads')
routersploit/modules/creds/telnet_default.py:41:    defaults = exploits.Option(wordlists.defaults, 'User:Pass or file with default credentials (file://)')
routersploit/modules/creds/telnet_default.py:42:    verbosity = exploits.Option('yes', 'Display authentication attempts')
routersploit/modules/creds/telnet_default.py:43:    stop_on_success = exploits.Option('yes', 'Stop on first valid authentication attempt')
routersploit/modules/creds/http_basic_bruteforce.py:40:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/http_basic_bruteforce.py:41:    port = exploits.Option(80, 'Target port')
routersploit/modules/creds/http_basic_bruteforce.py:43:    threads = exploits.Option(8, 'Numbers of threads')
routersploit/modules/creds/http_basic_bruteforce.py:44:    usernames = exploits.Option('admin', 'Username or file with usernames (file://)')
routersploit/modules/creds/http_basic_bruteforce.py:45:    passwords = exploits.Option(wordlists.passwords, 'Password or file with passwords (file://)')
routersploit/modules/creds/http_basic_bruteforce.py:46:    path = exploits.Option('/', 'URL Path')
routersploit/modules/creds/http_basic_bruteforce.py:47:    verbosity = exploits.Option(True, 'Display authentication attempts', validators=validators.boolify)
routersploit/modules/creds/http_basic_bruteforce.py:48:    stop_on_success = exploits.Option(True, 'Stop on first valid authentication attempt', validators=validators.boolify)
routersploit/modules/creds/ftp_default.py:38:    target = exploits.Option('', 'Target IP address or file with target:port (file://)')
routersploit/modules/creds/ftp_default.py:39:    port = exploits.Option(21, 'Target port')
routersploit/modules/creds/ftp_default.py:41:    threads = exploits.Option(8, 'Numbers of threads')
routersploit/modules/creds/ftp_default.py:42:    defaults = exploits.Option(wordlists.defaults, 'User:Pass pair or file with default credentials (file://)')
routersploit/modules/creds/ftp_default.py:43:    verbosity = exploits.Option('yes', 'Display authentication attempts')
routersploit/modules/creds/ftp_default.py:44:    stop_on_success = exploits.Option('yes', 'Stop on first valid authentication attempt')
routersploit/modules/exploits/cameras/honeywell/hicc_1100pt_password_disclosure.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/cameras/honeywell/hicc_1100pt_password_disclosure.py:34:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/cameras/brickcom/users_cgi_cred_disclosure.py:42:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/cameras/brickcom/users_cgi_cred_disclosure.py:43:    port = exploits.Option(80, 'Target port', validators=validators.integer)  # default port
routersploit/modules/exploits/cameras/brickcom/corp_network_cameras_conf_disclosure.py:47:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/cameras/brickcom/corp_network_cameras_conf_disclosure.py:48:    port = exploits.Option(80, 'Target port', validators=validators.integer)  # default port
routersploit/modules/exploits/cameras/dlink/dcs_930l_932l_auth_bypass.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/cameras/dlink/dcs_930l_932l_auth_bypass.py:37:    port = exploits.Option(8080, 'Target port')  # default port
routersploit/modules/exploits/cameras/siemens/CVMS2025_credentials_disclosure.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1',
routersploit/modules/exploits/cameras/siemens/CVMS2025_credentials_disclosure.py:36:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/cameras/multi/P2P_wificam_credential_disclosure.py:1286:    target = exploits.Option(
routersploit/modules/exploits/cameras/multi/P2P_wificam_credential_disclosure.py:1288:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/cameras/multi/jvc_vanderbilt_honeywell_path_traversal.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/cameras/multi/jvc_vanderbilt_honeywell_path_traversal.py:38:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/cameras/multi/jvc_vanderbilt_honeywell_path_traversal.py:40:    filename = exploits.Option('/etc/passwd', 'File to read from the filesystem')
routersploit/modules/exploits/cameras/multi/P2P_wificam_rce.py:1290:    target = exploits.Option(
routersploit/modules/exploits/cameras/multi/P2P_wificam_rce.py:1292:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/cameras/multi/netwave_IP_camera.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/cameras/multi/netwave_IP_camera.py:34:    port = exploits.Option(80, 'Target port', validators=validators.integer)  # default port
routersploit/modules/exploits/cameras/grandstream/gxv3611hd_ip_camera_rce.py:30:    target = exploits.Option('', 'Target IP address e.g. 192.168.1.1', validators=validators.ipv4)  # target address
routersploit/modules/exploits/cameras/grandstream/gxv3611hd_ip_camera_rce.py:31:    telnet_port = exploits.Option(23, 'Target port', validators=validators.integer)  # default port
routersploit/modules/exploits/cameras/videoiq/videoiq_camera_path_traversal.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/cameras/videoiq/videoiq_camera_path_traversal.py:35:    port = exploits.Option(8080, 'Target port', validators=validators.integer)  # default port
routersploit/modules/exploits/cameras/videoiq/videoiq_camera_path_traversal.py:37:    filename = exploits.Option('/etc/passwd', 'File to read from file system')
routersploit/modules/exploits/misc/asus/b1m_projector_rce.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/misc/asus/b1m_projector_rce.py:35:    port = exploits.Option(80, 'Target Port', validators=validators.integer)
routersploit/modules/exploits/misc/miele/pg8528_path_traversal.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/misc/miele/pg8528_path_traversal.py:35:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/misc/miele/pg8528_path_traversal.py:36:    filename = exploits.Option('/etc/shadow', 'File to read')
routersploit/modules/exploits/misc/wepresent/wipg1000_rce.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/misc/wepresent/wipg1000_rce.py:35:    port = exploits.Option(80, 'Target Port', validators=validators.integer)
routersploit/modules/exploits/routers/asmax/ar_1004g_password_disclosure.py:34:    target = exploits.Option('', 'Target URL address e.g. http://192.168.1.1', validators=validators.url)  # target url address
routersploit/modules/exploits/routers/asmax/ar_1004g_password_disclosure.py:35:    port = exploits.Option(80, 'Target HTTP port', validators=validators.integer)  # target http port
routersploit/modules/exploits/routers/asmax/ar_804_gu_rce.py:35:    target = exploits.Option('', 'Target URL address e.g. http://192.168.1.1', validators=validators.url)  # target url address
routersploit/modules/exploits/routers/asmax/ar_804_gu_rce.py:36:    port = exploits.Option(80, 'Target HTTP port', validators=validators.integer)  # target http port
routersploit/modules/exploits/routers/2wire/gateway_auth_bypass.py:35:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/2wire/gateway_auth_bypass.py:36:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/2wire/4011g_5012nv_path_traversal.py:35:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/2wire/4011g_5012nv_path_traversal.py:36:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/2wire/4011g_5012nv_path_traversal.py:37:    filename = exploits.Option('/etc/passwd', 'File to read from filesystem')
routersploit/modules/exploits/routers/asus/rt_n16_password_disclosure.py:39:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/asus/rt_n16_password_disclosure.py:40:    port = exploits.Option(8080, 'Target port')  # default port
routersploit/modules/exploits/routers/asus/infosvr_backdoor_rce.py:48:    target = exploits.Option('', 'Target IP address e.g. 192.168.1.1')
routersploit/modules/exploits/routers/huawei/hg630a_default_creds.py:35:    target = exploits.Option('', 'Target IP address', validators=validators.address)  # target address
routersploit/modules/exploits/routers/huawei/hg630a_default_creds.py:36:    ssh_port = exploits.Option(22, 'Target SSH Port', validators=validators.integer)  # target port
routersploit/modules/exploits/routers/huawei/hg630a_default_creds.py:38:    user = exploits.Option('admin', 'Default username to log in with')
routersploit/modules/exploits/routers/huawei/hg630a_default_creds.py:39:    password = exploits.Option('admin', 'Default password to log in with')
routersploit/modules/exploits/routers/huawei/hg530_hg520b_password_disclosure.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/huawei/hg530_hg520b_password_disclosure.py:37:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/huawei/hg866_password_change.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/huawei/hg866_password_change.py:34:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/huawei/hg866_password_change.py:35:    password = exploits.Option('routersploit', 'Password value to change admin account with')
routersploit/modules/exploits/routers/huawei/e5331_mifi_info_disclosure.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/huawei/e5331_mifi_info_disclosure.py:35:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/huawei/hg520_info_dislosure.py:34:    target = exploits.Option('', 'Target IP address', validators=validators.address)  # target address
routersploit/modules/exploits/routers/linksys/1500_2500_rce.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/linksys/1500_2500_rce.py:37:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/linksys/1500_2500_rce.py:38:    username = exploits.Option('admin', 'Username to login with')
routersploit/modules/exploits/routers/linksys/1500_2500_rce.py:39:    password = exploits.Option('admin', 'Password to login with')
routersploit/modules/exploits/routers/linksys/smartwifi_password_disclosure.py:46:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/linksys/smartwifi_password_disclosure.py:47:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/linksys/wrt100_110_rce.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/linksys/wrt100_110_rce.py:38:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/linksys/wrt100_110_rce.py:40:    username = exploits.Option('admin', 'Username to log in')
routersploit/modules/exploits/routers/linksys/wrt100_110_rce.py:41:    password = exploits.Option('admin', 'Password to log in')
routersploit/modules/exploits/routers/linksys/wap54gv3_rce.py:38:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/linksys/wap54gv3_rce.py:39:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/bhu/bhu_urouter_rce.py:32:    target = exploits.Option('', 'Target address e.g. http://192.168.62.1', validators=validators.url)
routersploit/modules/exploits/routers/bhu/bhu_urouter_rce.py:33:    port = exploits.Option(80, 'Target port')
routersploit/modules/exploits/routers/juniper/screenos_backdoor.py:35:    target = exploits.Option('', 'Target address e.g. 192.168.1.1', validators=validators.ipv4)  # target address
routersploit/modules/exploits/routers/juniper/screenos_backdoor.py:36:    ssh_port = exploits.Option(22, 'Target SSH port', validators=validators.integer)  # target ssh port
routersploit/modules/exploits/routers/juniper/screenos_backdoor.py:37:    telnet_port = exploits.Option(23, 'Target Telnet port', validators=validators.integer)  # target telnet port
routersploit/modules/exploits/routers/ubiquiti/airos_6_x.py:40:    target = exploits.Option('', 'Target address e.g. https://192.168.1.1', validators=validators.url)  # Target address
routersploit/modules/exploits/routers/ubiquiti/airos_6_x.py:41:    port = exploits.Option(443, 'Target port e.g. 443', validators=validators.integer)  # Default port
routersploit/modules/exploits/routers/ubiquiti/airos_6_x.py:42:    ssh_port = exploits.Option(22, 'Target SSH Port', validators=validators.integer)  # target ssh port
routersploit/modules/exploits/routers/ipfire/ipfire_shellshock.py:35:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/ipfire/ipfire_shellshock.py:36:    port = exploits.Option(444, 'Target port')  # default port
routersploit/modules/exploits/routers/ipfire/ipfire_shellshock.py:38:    username = exploits.Option('admin', 'Username to log in with')
routersploit/modules/exploits/routers/ipfire/ipfire_shellshock.py:39:    password = exploits.Option('admin', 'Password to log in with')
routersploit/modules/exploits/routers/ipfire/ipfire_proxy_rce.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/ipfire/ipfire_proxy_rce.py:37:    port = exploits.Option(444, 'Target Port')
routersploit/modules/exploits/routers/ipfire/ipfire_proxy_rce.py:39:    username = exploits.Option('admin', 'Username to log in with')
routersploit/modules/exploits/routers/ipfire/ipfire_proxy_rce.py:40:    password = exploits.Option('admin', 'Password to log in with')
routersploit/modules/exploits/routers/shuttle/915wm_dns_change.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/shuttle/915wm_dns_change.py:35:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/shuttle/915wm_dns_change.py:36:    dns1 = exploits.Option('8.8.8.8', 'Primary DNS Server')
routersploit/modules/exploits/routers/shuttle/915wm_dns_change.py:37:    dns2 = exploits.Option('8.8.4.4', 'Seconary DNS Server')
routersploit/modules/exploits/routers/dlink/dsl_2730_2750_path_traversal.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/dlink/dsl_2730_2750_path_traversal.py:35:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/dlink/dsl_2730_2750_path_traversal.py:36:    filename = exploits.Option('/etc/shadow', 'File to read')
routersploit/modules/exploits/routers/dlink/multi_hnap_rce.py:47:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/dlink/multi_hnap_rce.py:48:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/dlink/dir_825_path_traversal.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dir_825_path_traversal.py:34:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dir_825_path_traversal.py:35:    filename = exploits.Option('/etc/shadow', 'File to read')  # file to read
routersploit/modules/exploits/routers/dlink/dir_825_path_traversal.py:36:    username = exploits.Option('admin', 'Username to log in with')  # username - default: admin
routersploit/modules/exploits/routers/dlink/dir_825_path_traversal.py:37:    password = exploits.Option('', 'Password to log in with')  # password - default: blank
routersploit/modules/exploits/routers/dlink/dsl_2640b_dns_change.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dsl_2640b_dns_change.py:35:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dsl_2640b_dns_change.py:36:    dns1 = exploits.Option('8.8.8.8', 'Primary DNS Server')
routersploit/modules/exploits/routers/dlink/dsl_2640b_dns_change.py:37:    dns2 = exploits.Option('8.8.4.4', 'Seconary DNS Server')
routersploit/modules/exploits/routers/dlink/dir_300_645_815_upnp_rce.py:37:    target = exploits.Option('', 'Target IP address e.g. 192.168.1.1')
routersploit/modules/exploits/routers/dlink/dsp_w110_rce.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/dlink/dsp_w110_rce.py:34:    port = exploits.Option(80, 'Target Port', validators=validators.integer)
routersploit/modules/exploits/routers/dlink/dwr_932b_backdoor.py:34:    target = exploits.Option('', 'Target address e.g. 192.168.1.1', validators=validators.ipv4)
routersploit/modules/exploits/routers/dlink/dwr_932b_backdoor.py:35:    telnet_port = exploits.Option(23, 'Target telnet port', validators=validators.integer)
routersploit/modules/exploits/routers/dlink/dwl_3200ap_password_disclosure.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dwl_3200ap_password_disclosure.py:35:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dwl_3200ap_password_disclosure.py:38:    seconds = exploits.Option(3600, 'Number of seconds in the past to bruteforce')
routersploit/modules/exploits/routers/dlink/dir_300_320_600_615_info_disclosure.py:39:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dir_300_320_600_615_info_disclosure.py:40:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dwr_932_info_disclosure.py:35:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dwr_932_info_disclosure.py:36:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dir_815_850l_rce.py:32:    target = exploits.Option('', 'Target IP address e.g. 192.168.1.1')
routersploit/modules/exploits/routers/dlink/dcs_930l_auth_rce.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/dlink/dcs_930l_auth_rce.py:34:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/dlink/dcs_930l_auth_rce.py:35:    username = exploits.Option('admin', 'Username to log in with')
routersploit/modules/exploits/routers/dlink/dcs_930l_auth_rce.py:36:    password = exploits.Option('', 'Password to log in with')
routersploit/modules/exploits/routers/dlink/dsl_2750b_info_disclosure.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dsl_2750b_info_disclosure.py:37:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dir_300_600_rce.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/dlink/dir_300_600_rce.py:38:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/dlink/dvg_n5402sp_path_traversal.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dvg_n5402sp_path_traversal.py:35:    port = exploits.Option(8080, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dvg_n5402sp_path_traversal.py:36:    filename = exploits.Option('/etc/shadow', 'File to read')  # file to read
routersploit/modules/exploits/routers/dlink/multi_hedwig_cgi_exec.py:38:    target = exploits.Option('', 'Target address e.g http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/multi_hedwig_cgi_exec.py:39:    port = exploits.Option(80, 'Target port', validators=validators.integer)  # default port
routersploit/modules/exploits/routers/dlink/dsl_2740r_dns_change.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dsl_2740r_dns_change.py:35:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dsl_2740r_dns_change.py:36:    dns1 = exploits.Option('8.8.8.8', 'Primary DNS Server')
routersploit/modules/exploits/routers/dlink/dsl_2740r_dns_change.py:37:    dns2 = exploits.Option('8.8.4.4', 'Seconary DNS Server')
routersploit/modules/exploits/routers/dlink/dir_300_320_615_auth_bypass.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dir_300_320_615_auth_bypass.py:37:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dir_645_password_disclosure.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dir_645_password_disclosure.py:35:    port = exploits.Option(8080, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dir_645_815_rce.py:41:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/dlink/dir_645_815_rce.py:42:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/dlink/dsl_2730b_2780b_526b_dns_change.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dsl_2730b_2780b_526b_dns_change.py:37:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dsl_2730b_2780b_526b_dns_change.py:38:    dns1 = exploits.Option('8.8.8.8', 'Primary DNS Server')
routersploit/modules/exploits/routers/dlink/dsl_2730b_2780b_526b_dns_change.py:39:    dns2 = exploits.Option('8.8.4.4', 'Seconary DNS Server')
routersploit/modules/exploits/routers/dlink/dgs_1510_add_user.py:47:    target = exploits.Option('http://192.168.1.1', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/dlink/dgs_1510_add_user.py:48:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/dlink/dgs_1510_add_user.py:50:    username = exploits.Option('dlinkuser', 'User to add in case that user_add option is used.')
routersploit/modules/exploits/routers/dlink/dgs_1510_add_user.py:51:    password = exploits.Option('dlinkpwd1234', 'Password for user in case that user_add option is used.')
routersploit/modules/exploits/routers/dlink/dns_320l_327l_rce.py:38:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/dlink/dns_320l_327l_rce.py:39:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/thomson/twg850_password_disclosure.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/thomson/twg850_password_disclosure.py:34:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/thomson/twg849_info_disclosure.py:33:    target = exploits.Option('', 'Target IP address e.g. 192.168.1.1', validators=validators.address)
routersploit/modules/exploits/routers/netcore/udp_53413_rce.py:35:    target = exploits.Option('', 'Target IP address')
routersploit/modules/exploits/routers/netsys/multi_rce.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/netsys/multi_rce.py:37:    port = exploits.Option(9090, 'Target port')  # default port
routersploit/modules/exploits/routers/netgear/dgn2200_dnslookup_cgi_rce.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/netgear/dgn2200_dnslookup_cgi_rce.py:35:    port = exploits.Option(80, 'Target Port')  # target port
routersploit/modules/exploits/routers/netgear/dgn2200_dnslookup_cgi_rce.py:37:    username = exploits.Option('admin', 'Username')
routersploit/modules/exploits/routers/netgear/dgn2200_dnslookup_cgi_rce.py:38:    password = exploits.Option('password', 'Password')
routersploit/modules/exploits/routers/netgear/multi_rce.py:48:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/netgear/multi_rce.py:49:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/netgear/multi_rce.py:51:    arch = exploits.Option('mipsbe', 'Target architecture: mipsbe, mipsle')
routersploit/modules/exploits/routers/netgear/r7000_r6400_rce.py:43:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/netgear/r7000_r6400_rce.py:44:    port = exploits.Option(80, 'Target Port', validators=validators.integer)
routersploit/modules/exploits/routers/netgear/prosafe_rce.py:40:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/netgear/prosafe_rce.py:41:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/netgear/n300_auth_bypass.py:41:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/netgear/n300_auth_bypass.py:42:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/netgear/jnr1010_path_traversal.py:32:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/netgear/jnr1010_path_traversal.py:33:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/netgear/jnr1010_path_traversal.py:35:    username = exploits.Option('admin', 'Username to log in')
routersploit/modules/exploits/routers/netgear/jnr1010_path_traversal.py:36:    password = exploits.Option('password', 'Password to log in')
routersploit/modules/exploits/routers/netgear/jnr1010_path_traversal.py:38:    filename = exploits.Option('/etc/shadow', 'File to read')
routersploit/modules/exploits/routers/netgear/multi_password_disclosure-2017-5521.py:57:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/netgear/multi_password_disclosure-2017-5521.py:58:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/netgear/dgn2200_ping_cgi_rce.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/netgear/dgn2200_ping_cgi_rce.py:38:    port = exploits.Option(80, 'Target Port')  # target port
routersploit/modules/exploits/routers/netgear/dgn2200_ping_cgi_rce.py:40:    login = exploits.Option('admin', 'Username')
routersploit/modules/exploits/routers/netgear/dgn2200_ping_cgi_rce.py:41:    password = exploits.Option('password', 'Password')
routersploit/modules/exploits/routers/netgear/wnr500_612v3_jnr1010_2010_path_traversal.py:35:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/netgear/wnr500_612v3_jnr1010_2010_path_traversal.py:36:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/netgear/wnr500_612v3_jnr1010_2010_path_traversal.py:38:    username = exploits.Option('admin', 'Username to log in')
routersploit/modules/exploits/routers/netgear/wnr500_612v3_jnr1010_2010_path_traversal.py:39:    password = exploits.Option('password', 'Password to log in')
routersploit/modules/exploits/routers/netgear/wnr500_612v3_jnr1010_2010_path_traversal.py:41:    filename = exploits.Option('/etc/shadow', 'File to read')
routersploit/modules/exploits/routers/3com/imc_info_disclosure.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/3com/imc_info_disclosure.py:34:    port = exploits.Option(8080, 'Target port')  # default port
routersploit/modules/exploits/routers/3com/ap8760_password_disclosure.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/3com/ap8760_password_disclosure.py:37:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/3com/imc_path_traversal.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/3com/imc_path_traversal.py:35:    port = exploits.Option(8080, 'Target port')  # default port
routersploit/modules/exploits/routers/3com/imc_path_traversal.py:36:    filename = exploits.Option('\\windows\\win.ini', 'File to read from the filesystem')
routersploit/modules/exploits/routers/3com/3cradsl72_info_disclosure.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/3com/3cradsl72_info_disclosure.py:37:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/3com/officeconnect_rce.py:35:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/3com/officeconnect_rce.py:36:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/3com/officeconnect_info_disclosure.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/3com/officeconnect_info_disclosure.py:37:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/comtrend/ct_5361t_password_disclosure.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/comtrend/ct_5361t_password_disclosure.py:37:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/cisco/catalyst_2960_rocem.py:40:    target = exploits.Option('', 'Target IP address', validators=validators.ipv4)
routersploit/modules/exploits/routers/cisco/catalyst_2960_rocem.py:41:    telnet_port = exploits.Option(23, 'Target Port', validators=validators.integer)
routersploit/modules/exploits/routers/cisco/catalyst_2960_rocem.py:43:    action = exploits.Option('set', 'set / unset credless authentication for Telnet service')
routersploit/modules/exploits/routers/cisco/catalyst_2960_rocem.py:44:    device = exploits.Option(-1, 'Target device - use "show devices"', validators=validators.integer)
routersploit/modules/exploits/routers/cisco/dpc2420_info_disclosure.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/cisco/dpc2420_info_disclosure.py:34:    port = exploits.Option(8080, 'Target Port')
routersploit/modules/exploits/routers/cisco/unified_multi_path_traversal.py:43:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/cisco/unified_multi_path_traversal.py:44:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/cisco/unified_multi_path_traversal.py:45:    filename = exploits.Option('/etc/passwd', 'File to read from the filesystem')
routersploit/modules/exploits/routers/cisco/firepower_management60_rce.py:41:    target = exploits.Option('', 'Target IP address', validators=validators.url)
routersploit/modules/exploits/routers/cisco/firepower_management60_rce.py:42:    port = exploits.Option(443, 'Target Port', validators=validators.integer)
routersploit/modules/exploits/routers/cisco/firepower_management60_rce.py:43:    ssh_port = exploits.Option(22, 'Target SSH Port', validators=validators.integer)
routersploit/modules/exploits/routers/cisco/firepower_management60_rce.py:45:    username = exploits.Option('admin', 'Default username to log in')
routersploit/modules/exploits/routers/cisco/firepower_management60_rce.py:46:    password = exploits.Option('Admin123', 'Default password to log in')
routersploit/modules/exploits/routers/cisco/firepower_management60_rce.py:48:    newusername = exploits.Option('', 'New backdoor username (Default: Random)')
routersploit/modules/exploits/routers/cisco/firepower_management60_rce.py:49:    newpassword = exploits.Option('', 'New backdoor password (Default: Random)')
routersploit/modules/exploits/routers/cisco/secure_acs_bypass.py:37:    target = exploits.Option('', 'Target IP address', validators=validators.url)
routersploit/modules/exploits/routers/cisco/secure_acs_bypass.py:38:    port = exploits.Option(443, 'Target Port')
routersploit/modules/exploits/routers/cisco/secure_acs_bypass.py:40:    path = exploits.Option('/PI/services/UCP/', 'Path to UCP WebService')
routersploit/modules/exploits/routers/cisco/secure_acs_bypass.py:41:    username = exploits.Option('', 'Username to use')
routersploit/modules/exploits/routers/cisco/secure_acs_bypass.py:42:    password = exploits.Option('', 'Password to use')
routersploit/modules/exploits/routers/cisco/ucm_info_disclosure.py:36:    target = exploits.Option('', 'Target IP address', validators=validators.address)
routersploit/modules/exploits/routers/cisco/firepower_management60_path_traversal.py:38:    target = exploits.Option('', 'Target IP address', validators=validators.url)
routersploit/modules/exploits/routers/cisco/firepower_management60_path_traversal.py:39:    port = exploits.Option(443, 'Target Port')
routersploit/modules/exploits/routers/cisco/firepower_management60_path_traversal.py:41:    path = exploits.Option('/etc/passwd', 'File to read through vulnerability')
routersploit/modules/exploits/routers/cisco/firepower_management60_path_traversal.py:42:    username = exploits.Option('admin', 'Default username to log in')
routersploit/modules/exploits/routers/cisco/firepower_management60_path_traversal.py:43:    password = exploits.Option('Admin123', 'Default password to log in')
routersploit/modules/exploits/routers/cisco/ucs_manager_rce.py:38:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/cisco/ucs_manager_rce.py:39:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/cisco/ios_http_authorization_bypass.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/cisco/ios_http_authorization_bypass.py:38:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/cisco/ios_http_authorization_bypass.py:39:    show_command = exploits.Option('show startup-config', 'Command to be executed e.g show startup-config')
routersploit/modules/exploits/routers/cisco/video_surv_path_traversal.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/cisco/video_surv_path_traversal.py:35:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/cisco/video_surv_path_traversal.py:36:    filename = exploits.Option('/etc/passwd', 'File to read from the filesystem')
routersploit/modules/exploits/routers/movistar/adsl_router_bhs_rta_path_traversal.py:32:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/movistar/adsl_router_bhs_rta_path_traversal.py:33:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/movistar/adsl_router_bhs_rta_path_traversal.py:34:    filename = exploits.Option('/etc/shadow', 'File to read')
routersploit/modules/exploits/routers/belkin/auth_bypass.py:38:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/belkin/auth_bypass.py:39:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/belkin/n750_rce.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/belkin/n750_rce.py:37:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/belkin/play_max_prce.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/belkin/play_max_prce.py:35:    port = exploits.Option(80, 'Target Port', validators=validators.integer)
routersploit/modules/exploits/routers/belkin/play_max_prce.py:36:    cmd = exploits.Option('telnetd', 'Command to execute')
routersploit/modules/exploits/routers/belkin/n150_path_traversal.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/belkin/n150_path_traversal.py:38:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/belkin/n150_path_traversal.py:39:    filename = exploits.Option('/etc/shadow', 'File to read')
routersploit/modules/exploits/routers/belkin/g_plus_info_disclosure.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/belkin/g_plus_info_disclosure.py:37:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/belkin/g_n150_password_disclosure.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/belkin/g_n150_password_disclosure.py:38:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/tplink/archer_c2_c20i_rce.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/tplink/archer_c2_c20i_rce.py:37:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/tplink/wdr740nd_wdr740n_path_traversal.py:35:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/tplink/wdr740nd_wdr740n_path_traversal.py:36:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/tplink/wdr740nd_wdr740n_path_traversal.py:38:    filename = exploits.Option('/etc/shadow', 'File to read from the filesystem')
routersploit/modules/exploits/routers/tplink/wdr842nd_wdr842n_configure_disclosure.py:34:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1',
routersploit/modules/exploits/routers/tplink/wdr842nd_wdr842n_configure_disclosure.py:36:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/tplink/wdr740nd_wdr740n_backdoor.py:39:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/tplink/wdr740nd_wdr740n_backdoor.py:40:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/tplink/wdr740nd_wdr740n_backdoor.py:42:    username = exploits.Option('admin', 'Username to log in with')
routersploit/modules/exploits/routers/tplink/wdr740nd_wdr740n_backdoor.py:43:    password = exploits.Option('admin', 'Password to log in with')
routersploit/modules/exploits/routers/fortinet/fortigate_os_backdoor.py:38:    target = exploits.Option('', 'Target IP address', validators=validators.ipv4)
routersploit/modules/exploits/routers/fortinet/fortigate_os_backdoor.py:39:    ssh_port = exploits.Option(22, 'Target Port', validators=validators.integer)
routersploit/modules/exploits/routers/multi/heartbleed.py:39:    target = exploits.Option('', 'Target IP address e.g. 192.168.1.1')  # target address
routersploit/modules/exploits/routers/multi/heartbleed.py:40:    port = exploits.Option(443, 'Target port')  # default port
routersploit/modules/exploits/routers/multi/ssh_auth_keys.py:58:    target = exploits.Option('', 'Target IP address e.g. 192.168.1.1', validators=validators.address)  # target address
routersploit/modules/exploits/routers/multi/ssh_auth_keys.py:59:    ssh_port = exploits.Option(22, 'Target SSH Port', validators=validators.integer)  # target port
routersploit/modules/exploits/routers/multi/misfortune_cookie.py:127:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1')  # target address
routersploit/modules/exploits/routers/multi/misfortune_cookie.py:128:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/multi/misfortune_cookie.py:129:    device = exploits.Option('', 'Target device (show devices)')  # target firmware
routersploit/modules/exploits/routers/multi/rom0.py:58:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/multi/rom0.py:59:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/multi/tcp_32764_rce.py:57:    target = exploits.Option('', 'Target address e.g. 192.168.1.1')  # target address
routersploit/modules/exploits/routers/multi/shellshock.py:38:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/multi/shellshock.py:39:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/multi/shellshock.py:41:    path = exploits.Option('/', 'Url path')
routersploit/modules/exploits/routers/multi/shellshock.py:42:    method = exploits.Option('GET', 'HTTP method')
routersploit/modules/exploits/routers/multi/shellshock.py:43:    header = exploits.Option('User-Agent', 'HTTP header injection point')
routersploit/modules/exploits/routers/multi/tcp_32764_info_disclosure.py:57:    target = exploits.Option('', 'Target address e.g. 192.168.1.1')  # target address
routersploit/modules/exploits/routers/technicolor/tc7200_password_disclosure.py:33:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/technicolor/tc7200_password_disclosure.py:34:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/technicolor/dwg855_authbypass.py:33:    target = exploits.Option('192.168.0.1', 'Target address e.g. http://192.168.0.1', validators=validators.url)
routersploit/modules/exploits/routers/technicolor/dwg855_authbypass.py:34:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/technicolor/dwg855_authbypass.py:35:    nuser = exploits.Option('ruser', 'New user (overwrites existing user)')
routersploit/modules/exploits/routers/technicolor/dwg855_authbypass.py:36:    npass = exploits.Option('rpass', 'New password (overwrites existing password)')
routersploit/modules/exploits/routers/technicolor/tg784_authbypass.py:42:    target = exploits.Option('192.168.0.1', 'Target IP address e.g. 192.168.0.1', validators=validators.ipv4)
routersploit/modules/exploits/routers/technicolor/tg784_authbypass.py:44:    ftp_port = exploits.Option(21, 'Target FTP port')
routersploit/modules/exploits/routers/technicolor/tg784_authbypass.py:45:    telnet_port = exploits.Option(23, 'Target Telnet port')
routersploit/modules/exploits/routers/technicolor/tg784_authbypass.py:47:    remote_user = exploits.Option('upgrade', 'Default FTP username')
routersploit/modules/exploits/routers/technicolor/tg784_authbypass.py:48:    remote_pass = exploits.Option('Th0ms0n!', 'Default FTP password for "upgrade" user')
routersploit/modules/exploits/routers/technicolor/tg784_authbypass.py:50:    config_path = exploits.Option('user.ini', 'Path to config file')
routersploit/modules/exploits/routers/technicolor/tc7200_password_disclosure_v2.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/technicolor/tc7200_password_disclosure_v2.py:38:    port = exploits.Option(80, 'Target Port')
routersploit/modules/exploits/routers/zte/f660_config_disclosure.py:32:    target = exploits.Option('', 'Target address e.g. 192.168.1.1')  # target address
routersploit/modules/exploits/routers/zte/f660_config_disclosure.py:33:    username = exploits.Option("root", "Username to authenticate with")  # telnet username, default root
routersploit/modules/exploits/routers/zte/f660_config_disclosure.py:34:    password = exploits.Option("Zte521", "Password to authenticate with")  # telnet password, default Zte521
routersploit/modules/exploits/routers/zte/f460_f660_backdoor.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/zte/f460_f660_backdoor.py:38:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/zte/f609_config_disclosure.py:33:    target = exploits.Option('', 'Target address e.g. 192.168.1.1', validators=validators.ipv4)  # target address
routersploit/modules/exploits/routers/zte/f609_config_disclosure.py:34:    telnet_port = exploits.Option(23, 'Target Telnet port', validators=validators.integer)  # target telnet port
routersploit/modules/exploits/routers/zte/f609_config_disclosure.py:36:    username = exploits.Option("root", "Username to authenticate with")  # telnet username, default root
routersploit/modules/exploits/routers/zte/f609_config_disclosure.py:37:    password = exploits.Option("Zte521", "Password to authenticate with")  # telnet password, default Zte521
routersploit/modules/exploits/routers/zte/zxv10_rce.py:38:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/zte/zxv10_rce.py:39:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/zte/zxv10_rce.py:41:    username = exploits.Option('root', 'Username to log in with')
routersploit/modules/exploits/routers/zte/zxv10_rce.py:42:    password = exploits.Option('W!n0&oO7.', 'Password to log in with')
routersploit/modules/exploits/routers/zte/f6xx_default_root.py:34:    target = exploits.Option('', 'Target address e.g. 192.168.1.1', validators=validators.ipv4)  # target address
routersploit/modules/exploits/routers/zte/f6xx_default_root.py:35:    telnet_port = exploits.Option(23, 'Target Telnet port', validators=validators.integer)  # target telnet port
routersploit/modules/exploits/routers/zte/f6xx_default_root.py:37:    username = exploits.Option("root", "Username to authenticate with")  # telnet username, default root
routersploit/modules/exploits/routers/zte/f6xx_default_root.py:38:    password = exploits.Option("Zte521", "Password to authenticate with")  # telnet password, default Zte521
routersploit/modules/exploits/routers/zyxel/p660hn-t_v1_rce.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/modules/exploits/routers/zyxel/p660hn-t_v1_rce.py:37:    port = exploits.Option(80, 'Target port', validators=validators.integer)
routersploit/modules/exploits/routers/zyxel/d1000_rce.py:36:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/zyxel/d1000_rce.py:37:    port = exploits.Option(7547, 'Target port')  # default port
routersploit/modules/exploits/routers/zyxel/zywall_usg_extract_hashes.py:42:    target = exploits.Option('', 'Target address e.g. https://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/zyxel/zywall_usg_extract_hashes.py:43:    port = exploits.Option(443, 'Target port')  # default port
routersploit/modules/exploits/routers/zyxel/p660hn-t_v2_rce.py:38:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/zyxel/p660hn-t_v2_rce.py:39:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/zyxel/p660hn-t_v2_rce.py:41:    username = exploits.Option('supervisor', 'Username for the web interface')
routersploit/modules/exploits/routers/zyxel/p660hn-t_v2_rce.py:42:    password = exploits.Option('zyad1234', 'Password for the web interface')
routersploit/modules/exploits/routers/zyxel/d1000_wifi_password_disclosure.py:35:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/zyxel/d1000_wifi_password_disclosure.py:36:    port = exploits.Option(7547, 'Target port')  # default port
routersploit/modules/exploits/routers/billion/7700nr4_password_disclosure.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/billion/7700nr4_password_disclosure.py:38:    port = exploits.Option(80, 'Target port')  # default port
routersploit/modules/exploits/routers/billion/7700nr4_password_disclosure.py:40:    def_user = exploits.Option('user', 'Hardcoded username')
routersploit/modules/exploits/routers/billion/7700nr4_password_disclosure.py:41:    def_pass = exploits.Option('user', 'Hardcoded password')
routersploit/modules/exploits/routers/billion/5200w_rce.py:37:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
routersploit/modules/exploits/routers/billion/5200w_rce.py:38:    port = exploits.Option(80, 'Target port', validators=validators.integer)  # default port
routersploit/modules/exploits/routers/billion/5200w_rce.py:39:    telnet_port = exploits.Option(9999, 'Telnet port used for exploitation', validators=validators.integer)  # telnet port used for exploitation
routersploit/modules/exploits/routers/billion/5200w_rce.py:41:    username = exploits.Option('admin', 'Default username to log in')
routersploit/modules/exploits/routers/billion/5200w_rce.py:42:    password = exploits.Option('password', 'Default password to log in')
routersploit/payloads.py:55:    lhost = exploits.Option('', 'Connect-back IP address',
routersploit/payloads.py:57:    lport = exploits.Option(5555, 'Connect-back TCP Port',
routersploit/payloads.py:65:    rport = exploits.Option(5555, 'Bind Port',
routersploit/payloads.py:90:    output = exploits.Option('python', 'Output type: elf/c/python')
routersploit/payloads.py:91:    filepath = exploits.Option(
routersploit/templates/exploit.py:25:    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)
routersploit/templates/exploit.py:26:    port = exploits.Option(80, 'Target Port')
